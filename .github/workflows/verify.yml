on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: volta-cli/action@v1
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install Dependencies
      run: yarn install
    - name: Run ESLint
      run: yarn lint:js -f tap

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: volta-cli/action@v1
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install Dependencies
      run: yarn install
    - name: Run Tests
      run: yarn test
      env:
        CI: true

  ember-try:
    needs: [lint, test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ember-try-scenario: [ember-lts-3.12, ember-lts-3.16, ember-release, ember-beta, ember-canary]
    steps:
    - uses: actions/checkout@v1
    - uses: volta-cli/action@v1
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install Dependencies
      run: yarn install
    - name: Build Scenario
      run: yarn ember try:one ${{ matrix.ember-try-scenario }} --skip-cleanup=true --- ember build --environment=test
      env:
        CI: true
    - name: Store Build Artifact for Debugging
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.ember-try-scenario }}-dist
        path: ./dist
    - name: Run Tests
      run: yarn ember test --path ./dist
      env:
        CI: true
